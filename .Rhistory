setwd("~/Coursera/Reproducible Research/Peer Assessment 1")
sum(is.na(activity$interval))
activity <- read.csv("activity.csv")
activity <- read.csv("activity.csv")
sum(is.na(activity$interval))
sum(is.na(activity$steps))
sum(is.na(activity))
activity_day <- aggregate(steps ~ date, data = activity, FUN = sum)
activity_int <- aggregate(steps ~ interval, data = activity, FUN = mean)
activity$steps[is.na(activity$steps)] = activity_int[activity$interval[is.na(activity$steps)]]
activity$steps[is.na(activity$steps)] = activity_int$steps[activity$interval[is.na(activity$steps)]]
length(activity$steps)
activity_imputed <- activity
for (i in 1:length(activity$steps))
if (activity$steps[i] == NA){
tempInt <- activity$interval[i]
activity_imputed$steps[i] <- activity_int$steps[tempInt]
}
for (i in 1:length(activity$steps))
if (is.na(activity$steps[i])){
tempInt <- activity$interval[i]
activity_imputed$steps[i] <- activity_int$steps[tempInt]
}
View(activity_imputed)
View(activity_int)
View(activity)
for (i in 1:length(activity_imputed$steps))
if (is.na(activity_imputed$steps[i])){
tempInt <- activity_imputed$interval[i]
activity_imputed$steps[i] <- activity_int$steps[
activity_int$interval == tempInt]
}
View(activity_int)
activity_imputed_day <- aggregate(steps ~ date, data = activity, FUN = sum)
hist(activity_imputed_day$steps,
main = "Histogram of Daily Step Count With Imputed Values", xlab = "Steps per Day",
col = "turquoise2")
# Create new data frame with daily totals
activity_day <- aggregate(steps ~ date, data = activity, FUN = sum)
# Plot historgram of daily step totals
hist(activity_day$steps,
main = "Histogram of Daily Step Count", xlab = "Steps per Day",
col = "turquoise2")
# Find mean and median steps, create variables to report in text
meanSteps <- mean(activity_day$steps)
medianSteps <- median(activity_day$steps)
meanSteps
medianSteps
meanStepsImp <- mean(activity_imputed_day$steps)
medianStepsImp <- median(activity_imputed_day$steps)
sum(is.na(activity$steps))
length(activity$steps)
activity_imputed_day <- aggregate(steps ~ date, data = activity_imputed, FUN = sum)
# Plot historgram of daily step totals
hist(activity_imputed_day$steps,
main = "Histogram of Daily Step Count With Imputed Values", xlab = "Steps per Day",
col = "turquoise2")
# Find mean and median steps, create variables to report in text
meanStepsImp <- mean(activity_imputed_day$steps)
medianStepsImp <- median(activity_imputed_day$steps)
meanStepsImp
sd(activity$steps)
sd(activity$steps, rm.na = TRUE)
?sd
sd(activity$steps, na.rm = TRUE)
sd(activity_imputed$steps, na.rm = TRUE)
?weekend()
?weekend
??weekend
?weekday
?weekdays
class(activity_imputed$date)
activity_imputed$date <- as.date(activity_imputed$date)
activity_imputed$date <- as.Date(activity_imputed$date)
class(activity_imputed$date)
weekdays(activity_imputed$date)
weekdays(activity_imputed$date)
?%|%
??%||%
activity_imputed$weekend <- weekdays(activity_imputed$date) == "Saturday" |
activity_imputed$data == "Sunday")
activity_imputed$weekend <- weekdays(activity_imputed$date) == "Saturday" |
weekdays(activity_imputed$data) == "Sunday")
activity_imputed$day <- weekdays(activity_imputed$date)
hist(activity_imputed_day$steps,
main = "Histogram of Daily Step Count With Imputed Values", xlab = "Steps per Day",
col = "turquoise2")
plot(activity_imputed_int$interval, activity_int$steps, type = "l", lwd = 1.75,
main = "Average Daily Steps", xlab = "Interval", ylab ="Number of Steps",
col = "blue")
activity <- read.csv("activity.csv")
activity$date <- as.Date(activity$date)
activity_int <- aggregate(steps ~ interval, data = activity, FUN = mean)
plot(activity_int$interval, activity_int$steps, type = "l", lwd = 1.75,
main = "Average Daily Steps", xlab = "Interval", ylab ="Number of Steps",
col = "blue")
activity_imputed$weekend <- activity_imputed$day == "Saturday" |
activity_imputed$day == "Sunday"
activity_weekend <- activity_imputed == activity_imputed$weekend
remove(activity_weekend)
library(lattice)
?par
?lattice
xyplot(steps ~ interval, data = activity_weekday, type = "l", lwd = 1.75,
main = "Average Weekday Steps", xlab = "Time Interval",
ylab ="Number of Steps", col = "blue")
xyplot(steps ~ interval, data = activity_weekend, type = "l", lwd = 1.75,
main = "Average Weekend Steps", xlab = "Time Interval",
ylab ="Number of Steps", col = "blue")
activity_weekday <- activity_imputed[!activity_imputed$weekend]
activity_weekend <- activity_imputed[activity_imputed$weekend]
activity_weekday <- activity_imputed[!activity_imputed$weekend, ]
activity_weekend <- activity_imputed[activity_imputed$weekend, ]
xyplot(steps ~ interval, data = activity_weekday, type = "l", lwd = 1.75,
main = "Average Weekday Steps", xlab = "Time Interval",
ylab ="Number of Steps", col = "blue")
xyplot(steps ~ interval, data = activity_weekend, type = "l", lwd = 1.75,
main = "Average Weekend Steps", xlab = "Time Interval",
ylab ="Number of Steps", col = "blue")
plot(activity_weekday_int$interval, activity_int_int$steps,
type = "l", lwd = 1.75, main = "Average Weekday Steps",
xlab = "Time Interval", ylab ="Number of Steps", col = "blue")
plot(activity_weekday_int$interval, activity_int_int$steps,
type = "l", lwd = 1.75, main = "Average Weekend Steps",
xlab = "Time Interval", ylab ="Number of Steps", col = "blue")
activity_weekday_int <- aggregate(steps ~ interval, data = activity$weekday,
FUN = mean)
activity_weekday_int <- aggregate(steps ~ interval, data = activity$weekend,
FUN = mean)
activity_weekday_int <- aggregate(steps ~ interval, data = activity_weekday, FUN = mean)
activity_weekday_int <- aggregate(steps ~ interval, data = activity_weekend, FUN = mean)
plot(activity_weekday_int$interval, activity_int_int$steps,
type = "l", lwd = 1.75, main = "Average Weekday Steps",
xlab = "Time Interval", ylab ="Number of Steps", col = "blue")
plot(activity_weekday_int$interval, activity_int_int$steps,
type = "l", lwd = 1.75, main = "Average Weekend Steps",
xlab = "Time Interval", ylab ="Number of Steps", col = "blue")
plot(activity_weekday_int$interval, activity_weekday_int$steps,
type = "l", lwd = 1.75, main = "Average Weekday Steps",
xlab = "Time Interval", ylab ="Number of Steps", col = "blue")
plot(activity_weekend_int$interval, activity_weekend_int$steps,
type = "l", lwd = 1.75, main = "Average Weekend Steps",
xlab = "Time Interval", ylab ="Number of Steps", col = "blue")
activity_weekday_int <- aggregate(steps ~ interval, data = activity_weekday, FUN = mean)
activity_weekend_int <- aggregate(steps ~ interval, data = activity_weekend, FUN = mean)
plot(activity_weekday_int$interval, activity_weekday_int$steps,
type = "l", lwd = 1.75, main = "Average Weekday Steps",
xlab = "Time Interval", ylab ="Number of Steps", col = "blue")
plot(activity_weekend_int$interval, activity_weekend_int$steps,
type = "l", lwd = 1.75, main = "Average Weekend Steps",
xlab = "Time Interval", ylab ="Number of Steps", col = "blue")
?par
orig_par <- par()
par(mfrow = c(2, 1))
plot(activity_weekday_int$interval, activity_weekday_int$steps,
type = "l", lwd = 1.75, main = "Average Weekday Steps",
xlab = "Time Interval", ylab ="Number of Steps", col = "blue")
plot(activity_weekend_int$interval, activity_weekend_int$steps,
type = "l", lwd = 1.75, main = "Average Weekend Steps",
xlab = "Time Interval", ylab ="Number of Steps", col = "blue")
?round
View(activity_imputed_day)
View(activity_day)
View(activity_imputed)
sum(is.na(activity_imputed$steps))
sum(is.na(activity$steps))
mean(activity$steps)
mean(activity$steps, na.rm = TRUE)
mean(activity_int$steps, na.rm = TRUE)
mean(activity_imputed$steps, na.rm = TRUE)
mean(activity_imputed_int$steps, na.rm = TRUE)
activity <- read.csv("activity.csv")
activity$date <- as.Date(activity$date)
activity_day <- aggregate(steps ~ date, data = activity, FUN = sum)
str(activity)
str(activity_day)
hist(activity_day$steps, main = "Histogram of Daily Step Count",
xlab = "Steps per Day", col = "turquoise2")
meanSteps <- mean(activity_day$steps)
medianSteps <- median(activity_day$steps)
round(meanSteps, 2)
medianSteps
activity_int <- aggregate(steps ~ interval, data = activity, FUN = mean)
str(activity_int)
plot(activity_int$interval, activity_int$steps, type = "l", lwd = 1.75,
main = "Average Daily Steps", xlab = "Time Interval",
ylab ="Number of Steps", col = "blue")
activity_imputed <- activity
for (i in 1:length(activity_imputed$steps))
if (is.na(activity_imputed$steps[i])){
tempInt <- activity_imputed$interval[i]
activity_imputed$steps[i] <- activity_int$steps[
activity_int$interval == tempInt]
}
str(activity)
str(activity_imputed)
activity_imputed_day <- aggregate(steps ~ date, data = activity_imputed, FUN = sum)
hist(activity_imputed_day$steps,
main = "Histogram of Daily Step Count With Imputed Values",
xlab = "Steps per Day", col = "turquoise2")
meanStepsImp <- mean(activity_imputed_day$steps)
medianStepsImp <- median(activity_imputed_day$steps)
round(meanSteps, 2)
medianStepsImp
meanStepsImp <- mean(activity_imputed_day$steps)
medianStepsImp <- median(activity_imputed_day$steps)
medianStepsImp
meanStepsImp
round(meanStepsImp, 2)
round(meanStepsImp - meanSteps, 2)
medianStepsImp - medianSteps
View(activity)
View(activity_imputed)
View(activity_day)
View(activity_imputed_day)
mean(activity_day$steps)
round(mean(activity_day$steps), digits = 1)
meanSteps <- round(mean(activity_day$steps), digits = 1)
meanSteps
medianSteps <- median(activity_day$steps)
medianSteps
maxAvgSteps <- round(activity_int[activity_int$steps == max(activity_int$steps), 2], digits = 2)
maxAvgSteps <- round(activity_int[activity_int$steps == max(activity_int$steps), 2], digits = 1)
meanStepsImp <- round(mean(activity_imputed_day$steps), digits = 1)
